package miner

import (
	"encoding/binary"
	"encoding/hex"
	"fmt"
	"github.com/Qitmeer/qitmeer/common/hash"
	"testing"
)

func TestMining(t *testing.T) {

	workData, err := hex.DecodeString("12000000a7a9233d14ac43ebb80fa0e73f63745074c179422f588281f94398e692235145a288886ceec908ed62e2fe5be4a2bb12d5c064ae363cd5613de36ce508c80e100000000000000000000000000000000000000000000000000000000000000000ffff0320ebb8d85f080002312bac0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a7a9233d14ac43ebb80fa0e73f63745074c179422f588281f94398e692235145010100000001aa1a6d337394c195ad3e18fc3d8ea7e8f578d0b06e2a6b2380d2cc46692c1592ffffffffffffffff01007841cb0200000001510000000000000000e6b8d85f01145108eb1eb2f2aaab849b092f7169746d6565722f")
	if err != nil {
		fmt.Println(err)
		return
	}
	for i := uint64(0); i < ^uint64(0); i++ {
		nonce := make([]byte, 8)
		binary.LittleEndian.PutUint64(nonce, i)
		copy(workData[109:117], nonce)
		h := hash.HashMeerCrypto(workData[:117])
		fmt.Println(i, hex.EncodeToString(nonce), h)
	}

}
