syntax = "proto3";
package vmproto;
option go_package = "github.com/Qitmeer/qitmeer/engine/vm/proto";
import "google/protobuf/empty.proto";


message InitializeRequest {
    uint32 networkID = 1;
    bytes subnetID = 2;
    bytes chainID = 3;
    bytes nodeID = 4;
}

message InitializeResponse {
    uint32 status = 1;
    uint64 height = 2;
    bytes bytes = 3;
    bytes timestamp = 4;
}

message CreateHandlersResponse {
    repeated Handler handlers = 1;
}

message CreateStaticHandlersResponse {
    repeated Handler handlers = 1;
}

message Handler {
    string prefix = 1;
    uint32 lockOptions = 2;
    uint32 server = 3;
}

message BuildBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    bytes bytes = 3;
    uint64 height = 4;
    bytes timestamp = 5;
}

message ParseBlockRequest {
    bytes bytes = 1;
}

message ParseBlockResponse {
    bytes id = 1;
    bytes parentID = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes timestamp = 5;
}

message GetBlockRequest {
    bytes id = 1;
}

message GetBlockResponse {
    bytes parentID = 1;
    bytes bytes = 2;
    uint32 status = 3;
    uint64 height = 4;
    bytes timestamp = 5;
}

message BlockVerifyRequest {
    bytes bytes = 1;
}

message BlockVerifyResponse {
    bytes timestamp = 1;
}

message BlockAcceptRequest {
    bytes id = 1;
}

message BlockRejectRequest {
    bytes id = 1;
}

message VersionResponse {
    string version = 1;
}

message AppRequestMsg {
    // The node that sent us this request
    bytes nodeID = 1;
    // The ID of this request
    uint32 requestID = 2;
    // The request body
    bytes request = 3;
}

message AppRequestFailedMsg {
    // The node that we failed to get a response from
    bytes nodeID = 1;
    // The ID of the request we sent and didn't get a response to
    uint32 requestID = 2;
}

message AppResponseMsg {
    // The node that we got a response from
    bytes nodeID = 1;
    // Request ID of request that this is in response to
    uint32 requestID = 2;
    // The response body
    bytes response = 3;
}

message AppGossipMsg {
    // The node that sent us a gossip message
    bytes nodeID = 1;
    // The message body
    bytes msg = 2;
}

service VM {
    rpc Initialize(InitializeRequest) returns (InitializeResponse);
    rpc Shutdown(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc CreateHandlers(google.protobuf.Empty) returns (CreateHandlersResponse);
    rpc CreateStaticHandlers(google.protobuf.Empty) returns (CreateStaticHandlersResponse);
    rpc BuildBlock(google.protobuf.Empty) returns (BuildBlockResponse);
    rpc ParseBlock(ParseBlockRequest) returns (ParseBlockResponse);
    rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
    rpc Version(google.protobuf.Empty) returns (VersionResponse);
    rpc AppRequest(AppRequestMsg) returns (google.protobuf.Empty);
    rpc AppRequestFailed(AppRequestFailedMsg) returns (google.protobuf.Empty);
    rpc AppResponse(AppResponseMsg) returns (google.protobuf.Empty);
    rpc AppGossip(AppGossipMsg) returns (google.protobuf.Empty);

    rpc BlockVerify(BlockVerifyRequest) returns (BlockVerifyResponse);
    rpc BlockAccept(BlockAcceptRequest) returns (google.protobuf.Empty);
    rpc BlockReject(BlockRejectRequest) returns (google.protobuf.Empty);
}
