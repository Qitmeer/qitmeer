// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merkleblocks.proto

package qitmeer_p2p_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MerkleBlockRequest struct {
	Hashes               []*Hash  `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleBlockRequest) Reset()         { *m = MerkleBlockRequest{} }
func (m *MerkleBlockRequest) String() string { return proto.CompactTextString(m) }
func (*MerkleBlockRequest) ProtoMessage()    {}
func (*MerkleBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fca2b5267be08f9, []int{0}
}

func (m *MerkleBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleBlockRequest.Unmarshal(m, b)
}
func (m *MerkleBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleBlockRequest.Marshal(b, m, deterministic)
}
func (m *MerkleBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleBlockRequest.Merge(m, src)
}
func (m *MerkleBlockRequest) XXX_Size() int {
	return xxx_messageInfo_MerkleBlockRequest.Size(m)
}
func (m *MerkleBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleBlockRequest proto.InternalMessageInfo

func (m *MerkleBlockRequest) GetHashes() []*Hash {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type MerkleBlock struct {
	Header               []byte   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Transactions         int64    `protobuf:"varint,2,opt,name=transactions,proto3" json:"transactions,omitempty"`
	Hashes               []*Hash  `protobuf:"bytes,3,rep,name=hashes,proto3" json:"hashes,omitempty"`
	Flags                []byte   `protobuf:"bytes,4,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleBlock) Reset()         { *m = MerkleBlock{} }
func (m *MerkleBlock) String() string { return proto.CompactTextString(m) }
func (*MerkleBlock) ProtoMessage()    {}
func (*MerkleBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fca2b5267be08f9, []int{1}
}

func (m *MerkleBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleBlock.Unmarshal(m, b)
}
func (m *MerkleBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleBlock.Marshal(b, m, deterministic)
}
func (m *MerkleBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleBlock.Merge(m, src)
}
func (m *MerkleBlock) XXX_Size() int {
	return xxx_messageInfo_MerkleBlock.Size(m)
}
func (m *MerkleBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleBlock.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleBlock proto.InternalMessageInfo

func (m *MerkleBlock) GetHeader() []byte {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MerkleBlock) GetTransactions() int64 {
	if m != nil {
		return m.Transactions
	}
	return 0
}

func (m *MerkleBlock) GetHashes() []*Hash {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func (m *MerkleBlock) GetFlags() []byte {
	if m != nil {
		return m.Flags
	}
	return nil
}

type MerkleBlockResponse struct {
	Data                 []*MerkleBlock `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MerkleBlockResponse) Reset()         { *m = MerkleBlockResponse{} }
func (m *MerkleBlockResponse) String() string { return proto.CompactTextString(m) }
func (*MerkleBlockResponse) ProtoMessage()    {}
func (*MerkleBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1fca2b5267be08f9, []int{2}
}

func (m *MerkleBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleBlockResponse.Unmarshal(m, b)
}
func (m *MerkleBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleBlockResponse.Marshal(b, m, deterministic)
}
func (m *MerkleBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleBlockResponse.Merge(m, src)
}
func (m *MerkleBlockResponse) XXX_Size() int {
	return xxx_messageInfo_MerkleBlockResponse.Size(m)
}
func (m *MerkleBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleBlockResponse proto.InternalMessageInfo

func (m *MerkleBlockResponse) GetData() []*MerkleBlock {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*MerkleBlockRequest)(nil), "qitmeer.p2p.v1.MerkleBlockRequest")
	proto.RegisterType((*MerkleBlock)(nil), "qitmeer.p2p.v1.MerkleBlock")
	proto.RegisterType((*MerkleBlockResponse)(nil), "qitmeer.p2p.v1.MerkleBlockResponse")
}

func init() { proto.RegisterFile("merkleblocks.proto", fileDescriptor_1fca2b5267be08f9) }

var fileDescriptor_1fca2b5267be08f9 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x65, 0x52, 0x32, 0x5c, 0xab, 0x0e, 0x47, 0x85, 0x22, 0x58, 0xa2, 0x4c, 0x19, 0x90,
	0x11, 0xe5, 0x1f, 0x74, 0x40, 0x2c, 0x2c, 0xfe, 0x07, 0xd7, 0xf6, 0xa8, 0xab, 0x26, 0xb1, 0xe3,
	0x33, 0xfc, 0x0b, 0xfe, 0x33, 0xc2, 0x78, 0x48, 0x58, 0x18, 0x9f, 0xfd, 0xde, 0xfb, 0xf4, 0x0e,
	0xb0, 0xe7, 0x70, 0xe9, 0x78, 0xdf, 0xb9, 0xc3, 0x45, 0xb4, 0x0f, 0x2e, 0x3a, 0x5c, 0x8f, 0xe7,
	0xd8, 0x33, 0x07, 0xed, 0xb7, 0x5e, 0x7f, 0x3e, 0xdd, 0xad, 0x7b, 0x16, 0xa1, 0x13, 0xe7, 0xff,
	0x66, 0x07, 0xf8, 0x96, 0x52, 0xbb, 0x9f, 0x94, 0xe1, 0xf1, 0x83, 0x25, 0xe2, 0x03, 0x94, 0x96,
	0xc4, 0xb2, 0x54, 0xaa, 0x2e, 0xda, 0xe5, 0x76, 0xa3, 0xe7, 0x35, 0xfa, 0x95, 0xc4, 0x9a, 0xec,
	0x69, 0xbe, 0x14, 0x2c, 0x27, 0x25, 0x78, 0x0b, 0xa5, 0x65, 0x3a, 0x72, 0xa8, 0x54, 0xad, 0xda,
	0x95, 0xc9, 0x0a, 0x1b, 0x58, 0xc5, 0x40, 0x83, 0xd0, 0x21, 0x9e, 0xdd, 0x20, 0xd5, 0x55, 0xad,
	0xda, 0xc2, 0xcc, 0xde, 0x26, 0xe4, 0xe2, 0x7f, 0x32, 0x6e, 0xe0, 0xfa, 0xbd, 0xa3, 0x93, 0x54,
	0x8b, 0x04, 0xfa, 0x15, 0xcd, 0x0b, 0xdc, 0xcc, 0x36, 0x89, 0x77, 0x83, 0x30, 0x3e, 0xc2, 0xe2,
	0x48, 0x91, 0xf2, 0xa4, 0xfb, 0xbf, 0xc5, 0xd3, 0x48, 0x32, 0xee, 0xcb, 0x74, 0xa2, 0xe7, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x60, 0x81, 0xca, 0x58, 0x01, 0x00, 0x00,
}
