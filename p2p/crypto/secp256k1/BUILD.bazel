# gazelle:ignore
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "curve.go",
        "ext.h",
        "libsecp256k1/include/secp256k1.h",
        "libsecp256k1/include/secp256k1_recovery.h",
        "libsecp256k1/src/secp256k1.h",
        "libsecp256k1/src/util.h",
        "libsecp256k1/src/num_impl.h",
        "libsecp256k1/src/num.h",
        "libsecp256k1/src/field_impl.h",
        "libsecp256k1/src/field_10x26_impl.h",
        "libsecp256k1/src/field.h",
        "libsecp256k1/src/field_10x26.h",
        "libsecp256k1/src/scalar_impl.h",
        "libsecp256k1/src/group.h",
        "libsecp256k1/src/scalar.h",
        "libsecp256k1/src/scalar_8x32.h",
        "libsecp256k1/src/scalar_8x32_impl.h",
        "libsecp256k1/src/group_impl.h",
        "libsecp256k1/src/ecmult_impl.h",
        "libsecp256k1/src/ecmult.h",
        "libsecp256k1/src/ecmult_const_impl.h",
        "libsecp256k1/src/ecmult_const.h",
        "libsecp256k1/src/ecmult_gen_impl.h",
        "libsecp256k1/src/ecmult_gen.h",
        "libsecp256k1/src/hash_impl.h",
        "libsecp256k1/src/hash.h",
        "libsecp256k1/src/ecdsa_impl.h",
        "libsecp256k1/src/ecdsa.h",
        "libsecp256k1/src/eckey_impl.h",
        "libsecp256k1/src/eckey.h",
        "libsecp256k1/src/modules/recovery/main_impl.h",
        "panic_cb.go",
        "secp256.go",
    ],
    cgo = True,
    copts = [
        "-Icrypto/secp256k1/libsecp256k1",
        "-Icrypto/secp256k1/libsecp256k1/src",
        "-w", # Disable gcc warnings
    ],
    importpath = "github.com/Qitmeer/qitmeer/p2p/crypto/secp256k1",
    visibility = ["//visibility:public"],
    deps = ["//common/math:go_default_library"],
)

go_test(
    name = "go_default_test",
    srcs = ["secp256_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//common/math:go_default_library",
    ],
)
